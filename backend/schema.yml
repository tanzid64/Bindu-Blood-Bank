openapi: 3.0.3
info:
  title: Bindu Blood Bank
  version: 1.0.0
  description: Your project description
paths:
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/v1/auth/otp/request/:
    post:
      operationId: api_v1_auth_otp_request_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOtp'
          description: ''
  /api/v1/auth/profile/:
    get:
      operationId: api_v1_auth_profile_list
      parameters:
      - in: query
        name: blood_group
        schema:
          type: string
          enum:
          - A+
          - A-
          - AB+
          - AB-
          - B+
          - B-
          - O+
          - O-
        description: |-
          * `A+` - A+
          * `A-` - A-
          * `B+` - B+
          * `B-` - B-
          * `AB+` - AB+
          * `AB-` - AB-
          * `O+` - O+
          * `O-` - O-
      - in: query
        name: is_available
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1/auth/profile/{username}/:
    get:
      operationId: api_v1_auth_profile_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_profile_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_profile_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/auth/register/:
    post:
      operationId: api_v1_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/v1/auth/verify-email/:
    post:
      operationId: api_v1_auth_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /api/v1/core/services/:
    get:
      operationId: api_v1_core_services_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
          description: ''
    post:
      operationId: api_v1_core_services_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/v1/core/services/{slug}/:
    get:
      operationId: api_v1_core_services_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    put:
      operationId: api_v1_core_services_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: api_v1_core_services_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    delete:
      operationId: api_v1_core_services_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/event/:
    get:
      operationId: api_v1_event_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: api_v1_event_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/event/{slug}/:
    get:
      operationId: api_v1_event_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: api_v1_event_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_v1_event_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BloodGroupEnum:
      enum:
      - A+
      - A-
      - B+
      - B-
      - AB+
      - AB-
      - O+
      - O-
      type: string
      description: |-
        * `A+` - A+
        * `A-` - A-
        * `B+` - B+
        * `B-` - B-
        * `AB+` - AB+
        * `AB-` - AB-
        * `O+` - O+
        * `O-` - O-
    Event:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        banner:
          type: string
          format: uri
        event_date:
          type: string
          format: date
        location:
          type: string
        description:
          type: string
        is_approved:
          type: boolean
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserDetails'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - event_date
      - is_approved
      - location
      - slug
      - title
      - updated_at
    EventRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        banner:
          type: string
          format: binary
        event_date:
          type: string
          format: date
        location:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
      required:
      - event_date
      - location
      - title
    PatchedEventRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        banner:
          type: string
          format: binary
        event_date:
          type: string
          format: date
        location:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
    PatchedServiceRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 300
        image:
          type: string
          format: binary
        description:
          type: string
          minLength: 1
    PatchedUserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
        image:
          type: string
          format: binary
        phone:
          type: string
          minLength: 1
          maxLength: 15
        gender:
          type: string
          minLength: 1
          maxLength: 10
        address:
          type: string
          minLength: 1
        last_donation_date:
          type: string
          format: date
          nullable: true
        total_donated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available:
          type: boolean
    SendOtp:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 6
      required:
      - email
    SendOtpRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 6
          maxLength: 255
      required:
      - email
    Service:
      type: object
      properties:
        title:
          type: string
          maxLength: 300
        image:
          type: string
          format: uri
        description:
          type: string
      required:
      - description
      - image
      - title
    ServiceRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 300
        image:
          type: string
          format: binary
        description:
          type: string
          minLength: 1
      required:
      - description
      - image
      - title
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
        image:
          type: string
          format: uri
        phone:
          type: string
          maxLength: 15
        gender:
          type: string
          maxLength: 10
        address:
          type: string
        last_donation_date:
          type: string
          format: date
          nullable: true
        total_donated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available:
          type: boolean
      required:
      - address
      - blood_group
      - email
      - gender
      - image
      - phone
      - username
    UserDetails:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        image:
          type: string
          format: uri
      required:
      - email
      - image
      - username
    UserDetailsRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        image:
          type: string
          format: binary
      required:
      - email
      - image
      - username
    UserLogin:
      type: object
      properties:
        user_details:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        access_token:
          type: string
          readOnly: true
        refresh_token:
          type: string
          readOnly: true
      required:
      - access_token
      - refresh_token
      - user_details
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          type: string
          maxLength: 10
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
      required:
      - blood_group
      - email
      - gender
      - username
    UserRegistrationRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          type: string
          minLength: 1
          maxLength: 10
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - blood_group
      - email
      - gender
      - password
      - password2
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        blood_group:
          $ref: '#/components/schemas/BloodGroupEnum'
        image:
          type: string
          format: binary
        phone:
          type: string
          minLength: 1
          maxLength: 15
        gender:
          type: string
          minLength: 1
          maxLength: 10
        address:
          type: string
          minLength: 1
        last_donation_date:
          type: string
          format: date
          nullable: true
        total_donated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available:
          type: boolean
      required:
      - address
      - blood_group
      - email
      - gender
      - image
      - phone
      - username
    VerifyEmail:
      type: object
      properties:
        otp:
          type: string
          maxLength: 8
      required:
      - otp
    VerifyEmailRequest:
      type: object
      properties:
        otp:
          type: string
          minLength: 1
          maxLength: 8
      required:
      - otp
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
